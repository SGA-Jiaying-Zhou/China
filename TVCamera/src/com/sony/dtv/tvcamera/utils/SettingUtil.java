package com.sony.dtv.tvcamera.utils;import android.content.Context;import android.content.SharedPreferences;import android.text.TextUtils;import com.sony.dtv.tvcamera.R;import com.sony.dtv.tvcamera.app.TVCameraApp;public class SettingUtil {    static Context context = TVCameraApp.getInstance();    public static int getBitRate(String defaultVideoSize) {        int bitRate = 10 * 1000 * 1000;        String keyVideoSize = null;        SharedPreferences sharedPreferences = context.getSharedPreferences("setting", 0);        if (defaultVideoSize == null) {            keyVideoSize = sharedPreferences.getString("video_size_key", "");        } else {            keyVideoSize = defaultVideoSize;        }        String quality = sharedPreferences.getString("video_quality_key", "");        if (TextUtils.equals(keyVideoSize, Utils.VIDEO_SIZE_1080)) {            if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_HIGH)) {                bitRate = 10000000;            } else if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_MIDDLE)) {                bitRate = 3300000;            } else if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_LOW)) {                bitRate = 1250000;            }        } else if (TextUtils.equals(keyVideoSize, Utils.VIDEO_SIZE_720)) {            if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_HIGH)) {                bitRate = 8000000;            } else if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_MIDDLE)) {                bitRate = 2700000;            } else if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_LOW)) {                bitRate = 1000000;            }        } else if (TextUtils.equals(keyVideoSize, Utils.VIDEO_SIZE_360)) {            if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_HIGH)) {                bitRate = 1200000;            } else if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_MIDDLE)) {                bitRate = 400000;            } else if (TextUtils.equals(quality, Utils.VIDEO_QUALITY_LOW)) {                bitRate = 150000;            }        } else {            bitRate = 10000000;        }        return bitRate;    }    public static void refreshQuality() {        SharedPreferences mSettings = context.getSharedPreferences("setting", 0);        String keyVideoSize = mSettings.getString("video_size_key", "");        String keyVideoQuality = mSettings.getString("video_quality_key", "");        SharedPreferences.Editor mEditor = mSettings.edit();        String VIDEO_SIZE_1080_BPS_HIGH = "(10Mbps)";        String VIDEO_SIZE_720_BPS_HIGH = "(8Mbps)";        String VIDEO_SIZE_360_BPS_HIGH = "(1.2Mbps)";        String VIDEO_SIZE_1080_BPS_MIDDLE = "(3.3Mbps)";        String VIDEO_SIZE_720_BPS_MIDDLE = "(2.7Mbps)";        String VIDEO_SIZE_360_BPS_MIDDLE = "(400kbps)";        String VIDEO_SIZE_1080_BPS_LOW = "(1.25Mbps)";        String VIDEO_SIZE_720_BPS_LOW = "(1Mbps)";        String VIDEO_SIZE_360_BPS_LOW = "(150kbps)";        if (TextUtils.equals(keyVideoSize, Utils.VIDEO_SIZE_1080)) {            if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_HIGH)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_high) + VIDEO_SIZE_1080_BPS_HIGH);                mEditor.commit();            } else if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_MIDDLE)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_middle) + VIDEO_SIZE_1080_BPS_MIDDLE);                mEditor.commit();            } else if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_LOW)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_low) + VIDEO_SIZE_1080_BPS_LOW);                mEditor.commit();            }        } else if (TextUtils.equals(keyVideoSize, Utils.VIDEO_SIZE_720)) {            if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_HIGH)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_high) + VIDEO_SIZE_720_BPS_HIGH);                mEditor.commit();            } else if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_MIDDLE)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_middle) + VIDEO_SIZE_720_BPS_MIDDLE);                mEditor.commit();            } else if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_LOW)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_low) + VIDEO_SIZE_720_BPS_LOW);                mEditor.commit();            }        } else if (TextUtils.equals(keyVideoSize, Utils.VIDEO_SIZE_360)) {            if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_HIGH)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_high) + VIDEO_SIZE_360_BPS_HIGH);                mEditor.commit();            } else if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_MIDDLE)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_middle) + VIDEO_SIZE_360_BPS_MIDDLE);                mEditor.commit();            } else if (TextUtils.equals(keyVideoQuality, Utils.VIDEO_QUALITY_LOW)) {                mEditor.putString("video_quality_title", context.getString(R.string.video_quality_low) + VIDEO_SIZE_360_BPS_LOW);                mEditor.commit();            }        }    }}