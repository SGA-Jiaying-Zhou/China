package com.sony.dtv.tvcamera.app;import android.app.Activity;import android.app.Application;import android.app.Service;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.util.Log;import com.sony.dtv.tvcamera.extension.TvAppExtension;import com.sony.dtv.tvcamera.utils.Utils;public class TVCameraApp extends Application {    private static TVCameraApp mApplication;    private static Service mHostService = null;    private static Service mCameraRecognitionService = null;    private static Service mSecurityCameraService = null;    private static Activity mPhotoSettingActivity = null;    private static Activity mSettingActivity = null;    private static boolean mIsTerminateKeyPress = false;    private static boolean mIsHomeKeyPress = false;    private static final String TAG = "TVCameraApp";    private static final int TERMINATE_KEY_PRIORITY = 201;    private static TvAppExtension mTvAppExtension = null;    private static int mSecurityCameraStringID = Utils.SECURITY_CAMERA_NO_MESSAGE;    private static ScreenActionReceiver mScreenActionReceiver = null;    public static Activity getPhotoSettingActivity() {        return mPhotoSettingActivity;    }    public static void setPhotoSettingActivity(Activity photoSettingActivity) {        TVCameraApp.mPhotoSettingActivity = photoSettingActivity;    }    public static Activity getSettingActivity() {        return mSettingActivity;    }    public static void setSettingActivity(Activity settingActivity) {        TVCameraApp.mSettingActivity = settingActivity;    }    public static boolean isHomeKeyPress() {        return mIsHomeKeyPress;    }    public static void setIsHomeKeyPress(boolean isHomeKeyPress) {        TVCameraApp.mIsHomeKeyPress = isHomeKeyPress;    }    public static void registerScreenActionReceiver(Context context) {        if (null == mScreenActionReceiver) {            Log.d(TAG, "registerScreenActionReceiver");            mScreenActionReceiver = new ScreenActionReceiver();            final IntentFilter filter = new IntentFilter();            filter.addAction(Intent.ACTION_SCREEN_OFF);            filter.addAction(Intent.ACTION_SCREEN_ON);            context.registerReceiver(mScreenActionReceiver, filter);        }    }    public static void unregisterScreenActionReceiver(Context context) {        if (null != mScreenActionReceiver) {            Log.d("TvAppExtension", "unregisterScreenActionReceiver");            context.unregisterReceiver(mScreenActionReceiver);            mScreenActionReceiver = null;        }    }    public static int getSecurityCameraStringID() {        return mSecurityCameraStringID;    }    public static void setSecurityCameraStringID(int securityCameraStringID) {        Log.d(TAG, "setSecurityCameraStringID stringID = " + securityCameraStringID);        TVCameraApp.mSecurityCameraStringID = securityCameraStringID;    }    public static TvAppExtension getTvAppExtension() {        return mTvAppExtension;    }    public static void setTvAppExtension(TvAppExtension tvAppExtension) {        TVCameraApp.mTvAppExtension = tvAppExtension;    }    public static Service getCameraRecognitionService() {        return mCameraRecognitionService;    }    public static void setCameraRecognitionService(Service cameraRecognitionService) {        TVCameraApp.mCameraRecognitionService = cameraRecognitionService;    }    public static Service getSecurityCameraService() {        return mSecurityCameraService;    }    public static void setSecurityCameraService(Service mSecurityCameraService) {        TVCameraApp.mSecurityCameraService = mSecurityCameraService;    }    private static TerminateKeyReceiver mTerminateKeyReceiver = null;    public static void registerTerminateKeyReceiver() {        Log.d(TAG, "registerTerminateKeyReceiver");        if (null == mTerminateKeyReceiver) {            mIsTerminateKeyPress = false;            mTerminateKeyReceiver = new TerminateKeyReceiver();            IntentFilter terminateKeyFilter = new IntentFilter();            terminateKeyFilter.addAction(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);            terminateKeyFilter.addAction(TerminateKeyReceiver.ACTION_GUIDE);            terminateKeyFilter.addAction(TerminateKeyReceiver.ACTION_HELP);            terminateKeyFilter.addAction(TerminateKeyReceiver.ACTION_SCREEN_OFF);            terminateKeyFilter.addCategory(Intent.CATEGORY_DEFAULT);            terminateKeyFilter.setPriority(TERMINATE_KEY_PRIORITY);            mApplication.registerReceiver(mTerminateKeyReceiver, terminateKeyFilter);        }    }    public static void unregisterTerminateKeyReceiver() {        Log.d(TAG, "unregisterTerminateKeyReceiver");        if (null != mTerminateKeyReceiver) {            mApplication.unregisterReceiver(mTerminateKeyReceiver);            mTerminateKeyReceiver = null;            mIsTerminateKeyPress = false;        }    }    public static boolean isTerminateKeyPress() {        Log.d(TAG, "mIsTerminateKeyPress = " + mIsTerminateKeyPress);        return mIsTerminateKeyPress;    }    public static void setIsTerminateKeyPress(boolean isTerminateKeyPress) {        mIsTerminateKeyPress = isTerminateKeyPress;        Log.d(TAG, "mIsTerminateKeyPress = " + mIsTerminateKeyPress);    }    @Override    public void onCreate() {        super.onCreate();        Log.d(TAG, "onCreate");        mApplication = this;    }    public static TVCameraApp getInstance() {        return mApplication;    }}